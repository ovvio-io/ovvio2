import {
  CoroutineScheduler,
  SchedulerPriority,
} from '@ovvio/cfds/lib/client/coroutine';
import {
  EVENT_CACHE_LOADED,
  EVENT_VERTEX_DID_CHANGE,
  GraphManager,
} from '@ovvio/cfds/lib/client/graph/graph-manager';
import {
  MutationPack,
  mutationPackIter,
} from '@ovvio/cfds/lib/client/graph/mutations';
import { Predicate } from '@ovvio/cfds/lib/client/graph/query';
import { VertexManager } from '@ovvio/cfds/lib/client/graph/vertex-manager';
import {
  EVENT_LOADING_FINISHED,
  EVENT_VERTEX_CHANGED,
} from '@ovvio/cfds/lib/client/graph/vertex-source';
import { Note } from '@ovvio/cfds/lib/client/graph/vertices';
import { treeToPlaintext } from '@ovvio/cfds/lib/richtext/tree';
const BulkSearch = require('bulksearch');

export class NoteSearchEngine {
  private readonly _graph: GraphManager;
  private readonly _bulkSearchHandle: any;
  private readonly _graphListener: (key: string, pack: MutationPack) => void;
  private _loading: boolean;

  constructor(graph: GraphManager) {
    this._graph = graph;
    this._bulkSearchHandle = new BulkSearch({
      type: 'string',
      encode: 'extra',
      boolean: 'or',
      size: 2500,
      multi: true,
      strict: true,
      ordered: false,
      paging: false,
      async: false,
      cache: true,
      // filter: 'custom',
      // stemmer: 'custom',
    });

    this._graphListener = (key: string, pack: MutationPack) => {
      this._vertexDidChange(key, pack);
    };
    this._loading = true;

    // if (graph.cacheLoaded) {
    //   graph.on(EVENT_VERTEX_CHANGED, this._graphListener);
    //   this._loadInitialNotes();
    // } else {
    //   graph.once(EVENT_LOADING_FINISHED, () => {
    //     graph.on(EVENT_VERTEX_CHANGED, this._graphListener);
    //     // new SimpleTimer(2000, false, () => {
    //     this._loadInitialNotes();
    //     // }).schedule();
    //   });
    // }
  }

  search(text: string, filter?: Predicate<Note>): VertexManager<Note>[] {
    const graph = this._graph;
    const result: VertexManager<Note>[] = [];
    for (const key of this._bulkSearchHandle.search(text)) {
      const vert = graph.getVertex<Note>(key);
      if (filter === undefined || filter(vert)) {
        result.push(vert.manager as VertexManager<Note>);
      }
    }
    return result;
  }

  private _vertexDidChange(key: string, pack: MutationPack): void {
    const vert = this._graph.getVertex<Note>(key);
    if (!(vert instanceof Note)) {
      return;
    }

    // First, make sure that this update affects us
    let skipChange = true;
    for (const [field] of mutationPackIter(pack)) {
      if (field === 'isDeleted' || field === 'body' || field === 'title') {
        skipChange = false;
        break;
      }
    }
    if (skipChange) {
      return;
    }

    this._bulkSearchHandle.add(vert.key, extractTextFromNote(vert));
  }

  private async _loadInitialNotes(): Promise<void> {
    console.log('Search Engine started loading');
    const start = performance.now();
    await CoroutineScheduler.sharedScheduler().map(
      this._graph.vertexManagers(),
      mgr => {
        if (!mgr.isDeleted) {
          this._vertexDidChange(mgr.key, mgr.getCurrentStateMutations(true));
        }
      },
      SchedulerPriority.Background
    );
    this._loading = false;
    // this._bulkSearchHandle.optimize();
    console.log(
      `Search Engine finished indexing ${
        this._bulkSearchHandle.info().length
      } notes in ${(performance.now() - start) / 1000}sec`
    );
  }
}

function extractTextFromNote(note: Note): string {
  if (note.isDeleted) {
    return '';
  }
  let result = note.plaintextTitle;
  if (result.length > 0) {
    result += '\n\n';
  }
  result += treeToPlaintext(note.body.root);
  return result.trim();
}

const customLang = {
  filter: [
    'את',
    'לא',
    'של',
    'אני',
    'על',
    'זה',
    'עם',
    'כל',
    'הוא',
    'אם',
    'או',
    'גם',
    'יותר',
    'יש',
    'לי',
    'מה',
    'אבל',
    'פורום',
    'אז',
    'טוב',
    'רק',
    'כי',
    'שלי',
    'היה',
    'בפורום',
    'אין',
    'עוד',
    'היא',
    'אחד',
    'ב',
    'ל',
    'עד',
    'לך',
    'כמו',
    'להיות',
    'אתה',
    'כמה',
    'אנחנו',
    'הם',
    'כבר',
    'אנשים',
    'אפשר',
    'תודה',
    'שלא',
    'אותו',
    'ה',
    'מאוד',
    'הרבה',
    'ולא',
    'ממש',
    'לו',
    'א',
    'מי',
    'חיים',
    'בית',
    'שאני',
    'יכול',
    'שהוא',
    'כך',
    'הזה',
    'איך',
    'היום',
    'קצת',
    'עכשיו',
    'שם',
    'בכל',
    'יהיה',
    'תמיד',
    'י',
    'שלך',
    'הכי',
    'ש',
    'בו',
    'לעשות',
    'צריך',
    'כן',
    'פעם',
    'לכם',
    'ואני',
    'משהו',
    'אל',
    'שלו',
    'שיש',
    'ו',
    'וגם',
    'אתכם',
    'אחרי',
    'בנושא',
    'כדי',
    'פשוט',
    'לפני',
    'שזה',
    'אותי',
    'אנו',
    'למה',
    'דבר',
    'כ',
    'כאן',
    'אולי',
    'טובים',
    'רוצה',
    'שנה',
    'בעלי',
    'החיים',
    'למען',
    'אתם',
    'מ',
    'בין',
    'יום',
    'זאת',
    'איזה',
    'ביותר',
    'לה',
    'אחת',
    'הכל',
    'הפורומים',
    'לכל',
    'אלא',
    'פה',
    'יודע',
    'שלום',
    'דקות',
    'לנו',
    'השנה',
    'דרך',
    'אדם',
    'נראה',
    'זו',
    'היחידה',
    'רוצים',
    'בכלל',
    'טובה',
    'שלנו',
    'האם',
    'הייתי',
    'הלב',
    'היו',
    'ח',
    'שדרות',
    'בלי',
    'להם',
    'שאתה',
    'אותה',
    'מקום',
    'ואתם',
    'חלק',
    'בן',
    'בואו',
    'אחר',
    'האחת',
    'אותך',
    'כמובן',
    'בגלל',
    'באמת',
    'מישהו',
    'ילדים',
    'אותם',
    'הפורום',
    'טיפוח',
    'וזה',
    'ר',
    'שהם',
    'אך',
    'מזמין',
    'ישראל',
    'כוס',
    'זמן',
    'ועוד',
    'הילדים',
    'עדיין',
    'כזה',
    'עושה',
    'שום',
    'לקחת',
    'העולם',
    'תפוז',
    'לראות',
    'לפורום',
    'וכל',
    'לקבל',
    'נכון',
    'יוצא',
    'לעולם',
    'גדול',
    'אפילו',
    'ניתן',
    'שני',
    'אוכל',
    'קשה',
    'משחק',
    'ביום',
    'ככה',
    'אמא',
    'בת',
    'השבוע',
    'נוספים',
    'לגבי',
    'בבית',
    'אחרת',
    'לפי	ללא',
    'שנים',
    'הזמן',
    'שמן',
    'מעט',
    'לפחות',
    'אף',
    'שוב',
    'שלהם',
    'במקום',
    'כולם',
    'נועית',
    'הבא',
    'מעל',
    'לב',
    'המון',
    'לדבר',
    'ע',
    'אוהב',
    'מוסיפים',
    'חצי',
    'בעיקר',
    'כפות',
    'לפעמים',
    'שהיא',
    'הנהלת',
    'ועל',
    'ק',
    'אוהבים',
    'ת',
    'יודעת',
    'ד',
    'גרוע',
    'שאנחנו',
    'מים',
    'לילדים',
    'בארץ',
    'מודיע',
    'אשמח',
    'שלכם',
    'פחות',
    'לכולם',
    'די',
    'אהבה',
    'יכולה',
    'דברים',
    'הקהילה',
    'לעזור',
    'פרטים',
    'בדיוק',
    'מלח',
    'קל',
    'הראשי',
    'שלה',
    'להוסיף',
    'השני',
    'לדעתי',
    'בר',
    'למרות',
    'שגם',
    'מוזמנים',
    'לאחר',
    'במה',
    'חושב',
    'מאד',
    'יפה',
    'להגשים',
    'קטן',
    'מחפשים',
    'שמח',
    'מדברים',
    'ואם',
    'במיוחד',
    'עבודה',
    'מדי',
    'ואז',
    'חשוב',
    'שאם',
    'אוהבת',
    'פעמים',
    'מנהלת',
    'אומר',
    'מול',
    'קשר',
    'מנהל',
    'שיהיה',
    'שאין',
    'שאנו',
    'האהבה',
    'ס',
    'הצטרפו',
    'כפית',
    'בשביל',
    'החגים',
    'אופן',
    'לתת',
    'כף',
    'בתוך',
    'סוכר',
    'גיל',
    'בהצלחה',
    'והוא',
    'מקווה',
    'סתם',
    'ויש',
    'נגד',
    'כמעט',
    'שאת',
    'עולה',
    'אי',
    'מספר',
    'ראשון',
    'לדרך',
    'נהיה',
    'לעצב',
    'עושים',
    'ולנהל',
    'היתה',
    'עליו',
    'מזה',
    'הייתה',
    'בא',
    'בפרס',
    'חלות',
    'ראש',
    'מזמינים',
    'טיפים',
    'מכבי',
    'רבה',
    'הורים',
    '‡',
    'מקרה',
    'קרן',
    'המוצלח',
    'להגיע',
    'גדולה',
    'כנראה',
    'החמשיר',
    'הראשון',
    'פלפל',
    'המשחק',
    'וכאן',
    'לדעת',
    'ואת',
    'גרועים',
    'ספר',
    'אגב',
    'אחרים',
    'להגיד',
    'בתפוז',
    'והעולם',
    'אופנה',
    'דווקא',
    'מספיק',
    'שעות',
    'תמונות',
    'כשאנחנו',
    'שוקולד',
    'ולכן',
    'ג',
    'לקרוא',
    'לניהול',
    'שבוע',
    'ויופי',
    'חלום',
    'בה',
    'שהיה',
    'שאלה',
    'מקומה',
    'הזו',
    'בפורומים',
    'החדש',
    'מתאמצים',
    'שחקן',
    'שמזינים',
    'נשמת',
    'בערך',
    'מכל',
    'ומה',
    'רגל',
    'כסף',
    'רואה',
    'קטנה',
    'בצל',
    'בעולם',
    'אינטרנט',
    'חוץ',
    'ברור',
    'הולך',
    'חושבת',
    'לזה',
    'כלום',
    'הן',
    'כאלה',
    'בטוח',
    'הדבר',
    'תהיה',
    'מגיע',
    'סוף	האמת',
    'ממנו',
    'מיכל',
    'החדשה',
    'לתרום',
    'האנשים',
    'ועד',
    'בדרך',
    'אצלי',
    'ההורים',
    'בני',
    'מתוך',
    'כאשר',
    'לבד',
    'ראיתי',
    'מצב',
    'מלא',
    'לבחור',
    'נשמח',
    'החג',
    'רע',
    'עוף',
    'מן',
    'להביא',
    'מצאתי',
    'כתובות',
    'מעניין',
    'צריכה',
    'להכנס',
    'לחלוטין',
    'שעה',
    'מתכון',
    'קודם',
    'תשובות',
    'מדובר',
    'ניהול',
    'מזל',
    'כדאי',
    'יהיו',
    'ההודעות',
    'בוקר',
    'נילוות',
    'איפה',
    'בעיה',
    'קמח',
    'ללכת',
    'פורומים',
    'אמר',
    'נושא',
    'ההכנה',
    'בבקשה',
    'שכל',
    'הזאת',
    'למשחק',
    'פנינה',
    'תחרות',
    'חבר',
    'לקנות',
    'מהם',
    'רגע',
    'גרם',
    'אלו',
    'עצמו',
    'מראש',
    'הכלב',
    'כולנו',
    'עדיף',
    'איתו',
    'למשל',
    'לבשל',
    'למי',
    'רעיונות',
    'הבלוג',
    'רוב',
    'אביב',
    'כרגע',
    'בסוף',
    'אלה',
    'לחג',
    'ערוץ',
    'שווה',
    'באופן',
    'מאמין',
    'לבן',
    'בזה',
    'הכבוד',
    'לראש',
    'ם',
    'ימי',
    'שחור',
    'בצורה',
    'בעמוד',
    'ועם',
    'וחצי',
    'האלה',
    'תמונה',
    'בשלב',
    'משחקים',
    'נו',
    'a',
    'about',
    'above',
    'after',
    'again',
    'against',
    'all',
    'also',
    'am',
    'an',
    'and',
    'any',
    'are',
    "aren't",
    'as',
    'at',
    //"back",
    'be',
    'because',
    'been',
    'before',
    'being',
    'below',
    //"between",
    'both',
    'but',
    'by',
    'can',
    'cannot',
    "can't",
    'come',
    'could',
    "couldn't",
    //"day",
    'did',
    "didn't",
    'do',
    'does',
    "doesn't",
    'doing',
    'dont',
    'down',
    'during',
    'each',
    'even',
    'few',
    'first',
    'for',
    'from',
    'further',
    'get',
    //"give",
    'go',
    //"good",
    'had',
    "hadn't",
    'has',
    "hasn't",
    'have',
    "haven't",
    'having',
    'he',
    'hed',
    //"hell",
    'her',
    'here',
    "here's",
    'hers',
    'herself',
    'hes',
    'him',
    'himself',
    'his',
    'how',
    "how's",
    'i',
    'id',
    'if',
    'ill',
    'im',
    'in',
    'into',
    'is',
    "isn't",
    'it',
    "it's",
    'itself',
    "i've",
    'just',
    'know',
    "let's",
    'like',
    //"look",
    'make',
    'me',
    'more',
    'most',
    "mustn't",
    'my',
    'myself',
    'no',
    'nor',
    'not',
    'now',
    'of',
    'off',
    'on',
    'once',
    //"one",
    'only',
    'or',
    'other',
    'ought',
    'our',
    "our's",
    'ourselves',
    'out',
    'over',
    'own',
    //"people",
    'same',
    'say',
    'see',
    "shan't",
    'she',
    "she'd",
    'shell',
    'shes',
    'should',
    "shouldn't",
    'so',
    'some',
    'such',
    //"take",
    'than',
    'that',
    "that's",
    'the',
    'their',
    'theirs',
    'them',
    'themselves',
    'then',
    'there',
    "there's",
    'these',
    'they',
    "they'd",
    "they'll",
    "they're",
    "they've",
    //"think",
    'this',
    'those',
    'through',
    'time',
    'to',
    'too',
    //"two",
    //"under",
    'until',
    'up',
    'us',
    //"use",
    'very',
    'want',
    'was',
    "wasn't",
    'way',
    'we',
    'wed',
    'well',
    'were',
    "weren't",
    "we've",
    'what',
    "what's",
    'when',
    "when's",
    'where',
    "where's",
    'which',
    'while',
    'who',
    'whom',
    "who's",
    'why',
    "why's",
    'will',
    'with',
    "won't",
    //"work",
    'would',
    "wouldn't",
    //"year",
    'you',
    "you'd",
    "you'll",
    'your',
    "you're",
    "your's",
    'yourself',
    'yourselves',
    "you've",
  ],
  stemmer: {
    ational: 'ate',
    iveness: 'ive',
    fulness: 'ful',
    ousness: 'ous',
    ization: 'ize',
    tional: 'tion',
    biliti: 'ble',
    icate: 'ic',
    ative: '',
    alize: 'al',
    iciti: 'ic',
    entli: 'ent',
    ousli: 'ous',
    alism: 'al',
    ation: 'ate',
    aliti: 'al',
    iviti: 'ive',
    ement: '',
    enci: 'ence',
    anci: 'ance',
    izer: 'ize',
    alli: 'al',
    ator: 'ate',
    logi: 'log',
    ical: 'ic',
    ance: '',
    ence: '',
    ness: '',
    able: '',
    ible: '',
    ment: '',
    eli: 'e',
    bli: 'ble',
    ful: '',
    ant: '',
    ent: '',
    ism: '',
    ate: '',
    iti: '',
    ous: '',
    ive: '',
    ize: '',
    al: '',
    ou: '',
    er: '',
    ic: '',
  },
};

BulkSearch.registerLanguage('custom', customLang);

function regex(str: string) {
  return new RegExp(str, 'g');
}

var regex_whitespace = regex('\\s\\s+'),
  regex_split = regex('[-/]'),
  regex_a = regex('[àáâãäå]'),
  regex_e = regex('[èéêë]'),
  regex_i = regex('[ìíîï]'),
  regex_o = regex('[òóôõöő]'),
  regex_u = regex('[ùúûüű]'),
  regex_y = regex('[ýŷÿ]'),
  regex_n = regex('ñ'),
  regex_c = regex('ç'),
  regex_s = regex('ß'),
  regex_and = regex(' & ');

/** @const {Array} */
var regex_pairs = [
  regex_a,
  'a',
  regex_e,
  'e',
  regex_i,
  'i',
  regex_o,
  'o',
  regex_u,
  'u',
  regex_y,
  'y',
  regex_n,
  'n',
  regex_c,
  'c',
  regex_s,
  's',
  regex_and,
  ' and ',
  regex_split,
  ' ',
  regex_whitespace,
  ' ',
];

function replace(str, regex, replacement?) {
  if (typeof replacement === 'undefined') {
    for (var i = 0; i < /** @type {Array} */ regex.length; i += 2) {
      str = str.replace(regex[i], regex[i + 1]);
    }

    return str;
  } else {
    return str.replace(/** @type {!RegExp} */ regex, replacement);
  }
}

BulkSearch.registerEncoder('simple', function (str: string) {
  str = replace(str.toLowerCase(), regex_pairs);

  return str !== ' ' ? str : '';
});
